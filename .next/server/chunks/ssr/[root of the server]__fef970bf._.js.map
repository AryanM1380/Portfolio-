{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Portfolio-/src/app/components/navbar.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useTheme } from 'next-themes';\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [mounted, setMounted] = useState(false);\r\n  const { theme, setTheme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 20);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const handleScroll = (e, href) => {\r\n    e.preventDefault();\r\n    \r\n    // Only handle anchor links\r\n    if (href.startsWith('#')) {\r\n      const element = document.querySelector(href);\r\n      if (element) {\r\n        element.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        });\r\n      }\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Handler for mobile menu items - just for showing interaction, no navigation\r\n  const handleMobileMenuClick = (linkName) => {\r\n    // Just close the menu, no navigation\r\n    setIsOpen(false);\r\n    // Optional: You can add any other logic here like showing a message\r\n    console.log(`Clicked on ${linkName} tab`);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const navLinks = [\r\n    { name: 'About', href: '#about' },\r\n    { name: 'Projects', href: '#projects' },\r\n    { name: 'Skills', href: '#skills' },\r\n    { name: 'Education', href: '#education' },\r\n    { name: 'Work Experience', href: '#work-experience' },\r\n    { name: 'Contact', href: '#contact' }\r\n  ];\r\n\r\n  if (!mounted) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Backdrop overlay */}\r\n      <div \r\n        className={`fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity duration-300 md:hidden ${\r\n          isOpen ? 'opacity-100 z-40' : 'opacity-0 pointer-events-none'\r\n        }`}\r\n        onClick={() => setIsOpen(false)}\r\n      />\r\n\r\n      <nav className={`fixed w-full z-50 transition-all duration-300 ${\r\n        scrolled ? 'bg-gradient-to-r from-blue-500 to-purple-500 shadow-lg' : 'bg-transparent'\r\n      }`}>\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            {/* Logo or Brand */}\r\n            <div className=\"text-white font-bold text-xl\">\r\n              Portfolio\r\n            </div>\r\n\r\n            {/* Desktop Navigation */}\r\n            <div className=\"hidden md:flex space-x-8\">\r\n              {navLinks.map((link) => (\r\n                <Link\r\n                  key={link.name}\r\n                  href={link.href}\r\n                  className=\"text-white hover:text-purple-400 transition-colors\"\r\n                  onClick={(e) => link.href.startsWith('#') && handleScroll(e, link.href)}\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Mobile Menu Button */}\r\n            <button\r\n              onClick={() => setIsOpen(!isOpen)}\r\n              className=\"md:hidden p-2 rounded-lg text-white hover:bg-white/10 transition-colors\"\r\n              aria-label=\"Toggle menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                {isOpen ? (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                ) : (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Mobile Navigation - Fixed positioning and behavior */}\r\n          <div \r\n            className={`md:hidden fixed top-16 left-0 right-0 bg-gradient-to-r from-blue-500 to-purple-500 transform transition-all duration-300 ease-in-out ${\r\n              isOpen ? 'translate-y-0 opacity-100' : '-translate-y-full opacity-0'\r\n            } z-50 shadow-lg`}\r\n          >\r\n            <div className=\"py-4 px-4\">\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {navLinks.map((link) => (\r\n                  <button\r\n                    key={link.name}\r\n                    className=\"block w-full text-white hover:text-purple-400 transition-colors py-3 px-4 rounded-lg hover:bg-white/10 text-center border border-white/20\"\r\n                    onClick={() => handleMobileMenuClick(link.name)}\r\n                  >\r\n                    {link.name}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Add padding to prevent content overlap - this is crucial! */}\r\n      <div className=\"h-16\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Portfolio-/src/app/components/ScrollToTop.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // Show button when page is scrolled up to given distance\r\n  const toggleVisibility = () => {\r\n    if (window.pageYOffset > 300) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  // Set the top cordinate to 0\r\n  // make scrolling smooth\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isVisible && \r\n        <button\r\n          onClick={scrollToTop}\r\n          className=\"fixed bottom-4 right-4 z-50 p-3 rounded-full bg-primary text-white shadow-lg hover:bg-primary/90 transition-all duration-300 focus:outline-none\"\r\n          aria-label=\"Scroll to top\"\r\n        >\r\n          <svg \r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            className=\"h-6 w-6\" \r\n            fill=\"none\" \r\n            viewBox=\"0 0 24 24\" \r\n            stroke=\"currentColor\"\r\n          >\r\n            <path \r\n              strokeLinecap=\"round\" \r\n              strokeLinejoin=\"round\" \r\n              strokeWidth={2} \r\n              d=\"M5 10l7-7m0 0l7 7m-7-7v18\" \r\n            />\r\n          </svg>\r\n        </button>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop; "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,cAAc;IAClB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,yDAAyD;IACzD,MAAM,mBAAmB;QACvB,IAAI,OAAO,WAAW,GAAG,KAAK;YAC5B,aAAa;QACf,OAAO;YACL,aAAa;QACf;IACF;IAEA,6BAA6B;IAC7B,wBAAwB;IACxB,MAAM,cAAc;QAClB,OAAO,QAAQ,CAAC;YACd,KAAK;YACL,UAAU;QACZ;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG,EAAE;IAEL,qBACE;kBACG,2BACC,8OAAC;YACC,SAAS;YACT,WAAU;YACV,cAAW;sBAEX,cAAA,8OAAC;gBACC,OAAM;gBACN,WAAU;gBACV,MAAK;gBACL,SAAQ;gBACR,QAAO;0BAEP,cAAA,8OAAC;oBACC,eAAc;oBACd,gBAAe;oBACf,aAAa;oBACb,GAAE;;;;;;;;;;;;;;;;;AAOhB;uCAEe","debugId":null}}]
}