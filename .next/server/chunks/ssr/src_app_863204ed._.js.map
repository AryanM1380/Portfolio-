{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Portfolio-/src/app/components/Comments.jsx"],"sourcesContent":["\"use client\";\r\n\r\n// import { useState } from 'react';\r\n\r\nconst Comments = () => {\r\n  // const [comments, setComments] = useState([]);\r\n  // const [newComment, setNewComment] = useState({ author: '', content: '' });\r\n  // const [newReply, setNewReply] = useState({ name: '', content: '', commentId: null });\r\n\r\n  // const handleCommentSubmit = async () => {\r\n  //   if (!newComment.author || !newComment.content) return;\r\n\r\n  //   const comment = {\r\n  //     id: Date.now(),\r\n  //     author: newComment.author,\r\n  //     content: newComment.content,\r\n  //     date: new Date().toISOString().split('T')[0],\r\n  //     replies: []\r\n  //   };\r\n\r\n  //   try {\r\n  //     const response = await fetch('/api/comments', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //       body: JSON.stringify({ comment }),\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       setComments(prev => [...prev, comment]);\r\n  //       setNewComment({ author: '', content: '' });\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error saving comment:', error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleReplySubmit = async (commentId) => {\r\n  //   if (!newReply.name || !newReply.content) return;\r\n\r\n  //   const reply = {\r\n  //     id: Date.now(),\r\n  //     name: newReply.name,\r\n  //     content: newReply.content,\r\n  //     date: new Date().toISOString().split('T')[0]\r\n  //   };\r\n\r\n  //   try {\r\n  //     const response = await fetch('/api/replies', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         commentId,\r\n  //         reply\r\n  //       }),\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       setComments(prev => prev.map(comment => \r\n  //         comment.id === commentId \r\n  //           ? { ...comment, replies: [...comment.replies, reply] }\r\n  //           : comment\r\n  //       ));\r\n  //       setNewReply({ name: '', content: '', commentId: null });\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error saving reply:', error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md\">\r\n        <h3 className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-white\">Coming Soon!</h3>\r\n        <p className=\"text-gray-600 dark:text-gray-300\">\r\n          Comments feature is currently under development. Stay tuned for updates!\r\n        </p>\r\n      </div>\r\n\r\n      {/* Commented out original code\r\n      <div className=\"mb-8\">\r\n        <div className=\"space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            value={newComment.author}\r\n            onChange={(e) => setNewComment(prev => ({ ...prev, author: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n          <textarea\r\n            placeholder=\"Write your comment...\"\r\n            value={newComment.content}\r\n            onChange={(e) => setNewComment(prev => ({ ...prev, content: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary\"\r\n            rows=\"3\"\r\n          />\r\n          <button\r\n            onClick={handleCommentSubmit}\r\n            className=\"w-full px-6 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors\"\r\n          >\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {comments.map((comment) => (\r\n          <div key={comment.id} className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md\">\r\n            <div className=\"flex justify-between items-start mb-2\">\r\n              <span className=\"font-medium text-gray-800 dark:text-white\">{comment.author}</span>\r\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">{new Date(comment.date).toLocaleDateString()}</span>\r\n            </div>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{comment.content}</p>\r\n\r\n            {comment.replies?.map((reply) => (\r\n              <div key={reply.id} className=\"ml-8 mt-4 bg-gray-50 dark:bg-gray-700 p-4 rounded-md\">\r\n                <div className=\"flex justify-between items-start mb-2\">\r\n                  <span className=\"font-medium text-gray-800 dark:text-white\">{reply.name}</span>\r\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">{new Date(reply.date).toLocaleDateString()}</span>\r\n                </div>\r\n                <p className=\"text-gray-600 dark:text-gray-300\">{reply.content}</p>\r\n              </div>\r\n            ))}\r\n\r\n            {newReply.commentId === comment.id ? (\r\n              <div className=\"ml-8 mt-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your name\"\r\n                  value={newReply.name}\r\n                  onChange={(e) => setNewReply(prev => ({ ...prev, name: e.target.value }))}\r\n                  className=\"w-full mb-2 px-4 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                />\r\n                <textarea\r\n                  placeholder=\"Write a reply...\"\r\n                  value={newReply.content}\r\n                  onChange={(e) => setNewReply(prev => ({ ...prev, content: e.target.value }))}\r\n                  className=\"w-full mb-2 px-4 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  rows=\"2\"\r\n                />\r\n                <button\r\n                  onClick={() => handleReplySubmit(comment.id)}\r\n                  className=\"px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors\"\r\n                >\r\n                  Post Reply\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={() => setNewReply({ name: '', content: '', commentId: comment.id })}\r\n                className=\"ml-8 mt-2 text-sm text-primary hover:text-primary/80\"\r\n              >\r\n                Reply\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments; "],"names":[],"mappings":";;;;AAAA;;AAEA,oCAAoC;AAEpC,MAAM,WAAW;IACf,gDAAgD;IAChD,6EAA6E;IAC7E,wFAAwF;IAExF,4CAA4C;IAC5C,2DAA2D;IAE3D,sBAAsB;IACtB,sBAAsB;IACtB,iCAAiC;IACjC,mCAAmC;IACnC,oDAAoD;IACpD,kBAAkB;IAClB,OAAO;IAEP,UAAU;IACV,sDAAsD;IACtD,wBAAwB;IACxB,mBAAmB;IACnB,8CAA8C;IAC9C,WAAW;IACX,2CAA2C;IAC3C,UAAU;IAEV,yBAAyB;IACzB,iDAAiD;IACjD,oDAAoD;IACpD,QAAQ;IACR,sBAAsB;IACtB,qDAAqD;IACrD,MAAM;IACN,KAAK;IAEL,mDAAmD;IACnD,qDAAqD;IAErD,oBAAoB;IACpB,sBAAsB;IACtB,2BAA2B;IAC3B,iCAAiC;IACjC,mDAAmD;IACnD,OAAO;IAEP,UAAU;IACV,qDAAqD;IACrD,wBAAwB;IACxB,mBAAmB;IACnB,8CAA8C;IAC9C,WAAW;IACX,+BAA+B;IAC/B,qBAAqB;IACrB,gBAAgB;IAChB,YAAY;IACZ,UAAU;IAEV,yBAAyB;IACzB,iDAAiD;IACjD,oCAAoC;IACpC,mEAAmE;IACnE,sBAAsB;IACtB,YAAY;IACZ,iEAAiE;IACjE,QAAQ;IACR,sBAAsB;IACtB,mDAAmD;IACnD,MAAM;IACN,KAAK;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA4D;;;;;;8BAC1E,8OAAC;oBAAE,WAAU;8BAAmC;;;;;;;;;;;;;;;;;AAuFxD;uCAEe","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Portfolio-/src/app/community/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Comments from '../components/Comments';\r\nimport { useState } from 'react';\r\n\r\nexport default function CommunityPage() {\r\n  const [isJoined, setIsJoined] = useState(false);\r\n\r\n  const handleJoinCommunity = () => {\r\n    setIsJoined(true);\r\n  };\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gray-50 dark:bg-gray-900 pt-20\">\r\n      <div className=\"container mx-auto px-4 py-12\">\r\n        <h1 className=\"text-4xl md:text-5xl font-bold text-center mb-12 text-gray-800 dark:text-white\">\r\n          Community\r\n        </h1>\r\n\r\n        {!isJoined ? (\r\n          <>\r\n            {/* Community Guidelines */}\r\n            <div className=\"max-w-4xl mx-auto mb-12 bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 md:p-8\">\r\n              <h2 className=\"text-2xl font-bold mb-4 text-gray-800 dark:text-white\">Community Guidelines</h2>\r\n              <p className=\"mb-4 text-gray-700 dark:text-gray-300\">\r\n                Welcome to our community! To ensure a positive experience for everyone, please follow these guidelines:\r\n              </p>\r\n              <ul className=\"list-disc pl-6 mb-4 text-gray-700 dark:text-gray-300\">\r\n                <li>Be respectful and kind to other members</li>\r\n                <li>Keep discussions relevant and constructive</li>\r\n                <li>Use appropriate language and avoid offensive content</li>\r\n                <li>Share your knowledge and experiences</li>\r\n                <li>Report any inappropriate behavior</li>\r\n              </ul>\r\n              <p className=\"mb-6 text-gray-700 dark:text-gray-300\">\r\n                By participating in our community, you agree to follow these guidelines. We reserve the right to remove any content that violates these rules.\r\n              </p>\r\n              <div className=\"flex justify-center\">\r\n                <button \r\n                  onClick={handleJoinCommunity}\r\n                  className=\"px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors duration-300\"\r\n                >\r\n                  Join Community\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Comments Section */}\r\n            <div className=\"max-w-4xl mx-auto\">\r\n              <Comments />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,sBAAsB;QAC1B,YAAY;IACd;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAiF;;;;;;gBAI9F,CAAC,yBACA;8BAEE,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwD;;;;;;0CACtE,8OAAC;gCAAE,WAAU;0CAAwC;;;;;;0CAGrD,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;;;;;;;0CAEN,8OAAC;gCAAE,WAAU;0CAAwC;;;;;;0CAGrD,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;kDAOP;8BAEE,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,qIAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;;;;;;;AAOvB","debugId":null}}]
}